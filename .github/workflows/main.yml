name: Build and Compress EXE and Compile Stuff

on:
  push:
    branches:
      - main
    tags:
      - v
  pull_request:

jobs:
  build-and-compress:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
      fail-fast: false # Allows jobs to fail independently

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set Up Python
      uses: actions/setup-python@v5.3.0
      with:
        python-version: '3.13'

    - name: Create Virtual Environment
      run: python -m venv venv

    - name: Get Version Number
      id: version_num
      run: |
        "version=$(grep "(?<=GIT_RELEASE_VERSION = ''').+(?=''')" -Po "./Source/util/const.py")" >> $GITHUB_OUTPUT

    - name: Install Dependencies
      run: |
        pip install --upgrade pip
        pip install -r Source/requirements.txt
        pip install -r Source/requirements.dev.txt
        pip install requests

    - name: Build EXE (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        echo "Current Path: "
        echo %cd%
        call venv\\Scripts\\activate
        echo "Virtual environment activated. Now running pyinstaller."
        pyinstaller ^
          --name "RFD" ^
          --onefile D:/a/Roblox-Freedom-Distribution/Roblox-Freedom-Distribution/Source/_main.py ^
          --paths D:/a/Roblox-Freedom-Distribution/Roblox-Freedom-Distribution/Source/ ^
          --workpath D:/a/Roblox-Freedom-Distribution/Roblox-Freedom-Distribution/PyInstallerWork ^
          --distpath D:/a/Roblox-Freedom-Distribution/Roblox-Freedom-Distribution/dist ^
          --icon D:/a/Roblox-Freedom-Distribution/Roblox-Freedom-Distribution/Source/Icon.ico ^
          --specpath D:/a/Roblox-Freedom-Distribution/Roblox-Freedom-Distribution/PyInstallerWork/Spec ^
          --add-data "D:/a/Roblox-Freedom-Distribution/Roblox-Freedom-Distribution/Source/*;Source" ^
          --hidden-import requests
      shell: cmd

    - name: Build PKG (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        source venv/bin/activate
        echo "Virtual environment activated. Now running pyinstaller."
        pyinstaller \
          --name "RFD" \
          --onefile $GITHUB_WORKSPACE/Source/_main.py \
          --paths $GITHUB_WORKSPACE/Source/ \
          --workpath $GITHUB_WORKSPACE/PyInstallerWork \
          --distpath $GITHUB_WORKSPACE/dist \
          --icon $GITHUB_WORKSPACE/Source/Icon.ico \
          --specpath $GITHUB_WORKSPACE/PyInstallerWork/Spec \
          --add-data "$GITHUB_WORKSPACE/Source/*:Source" \
          --hidden-import requests
      shell: bash

    - name: Compress Executable (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        zip -j  dist/RFD-ubuntu.zip dist/RFD
        rm dist/RFD

    - name: Upload Artifact (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4.6.0
      with:
        name: RFD-Release-windows
        path: dist/RFD.exe

    - name: Upload Artifact (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4.6.0
      with:
        name: RFD-Release-ubuntu
        path: RFD-ubuntu.zip

    - name: Release with Notes
      uses: softprops/action-gh-release@v1
      with:
        files: "dist/*"
        tag_name: "commit-${{ steps.version_num.outputs.version }}-${{ github.event.head_commit.id }}"
        prerelease: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
