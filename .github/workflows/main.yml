name: Build and Compress EXE and Compile Stuff

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-compress:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
      fail-fast: false # Allows jobs to fail independently

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set Up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Dependencies (Windows and Ubuntu)
      run: |
        python -m venv venv
        ${{ matrix.os == 'windows-latest' && 'venv\\Scripts\\activate' || 'source venv/bin/activate' }}
        pip install --upgrade pip
        pip install -r Source/requirements.txt
        pip install -r Source/requirements.dev.txt
      shell: ${{ matrix.os == 'windows-latest' && 'cmd' || 'bash' }}

    - name: Build EXE (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        venv\\Scripts\\activate
        pyinstaller ^
          --name "RFD" ^
          --onefile $GITHUB_WORKSPACE/Source/_main.py ^
          --paths $GITHUB_WORKSPACE/Source/ ^
          --workpath $GITHUB_WORKSPACE/PyInstallerWork ^
          --distpath $GITHUB_WORKSPACE/dist ^
          --icon $GITHUB_WORKSPACE/Source/Icon.ico ^
          --specpath $GITHUB_WORKSPACE/PyInstallerWork/Spec ^
          --add-data "$GITHUB_WORKSPACE/Source/*:Source" ^
          --hidden-import requests
      shell: cmd

    - name: Build EXE (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        source venv/bin/activate
        pyinstaller \
          --name "RFD" \
          --onefile $GITHUB_WORKSPACE/Source/_main.py \
          --paths $GITHUB_WORKSPACE/Source/ \
          --workpath $GITHUB_WORKSPACE/PyInstallerWork \
          --distpath $GITHUB_WORKSPACE/dist \
          --icon $GITHUB_WORKSPACE/Source/Icon.ico \
          --specpath $GITHUB_WORKSPACE/PyInstallerWork/Spec \
          --add-data "$GITHUB_WORKSPACE/Source/*:Source" \
          --hidden-import requests
      shell: bash

    - name: Compress Executable (Windows) using PowerShell
      if: matrix.os == 'windows-latest'
      run: |
        Compress-Archive -Path dist\\RFD.exe -DestinationPath RFD_release.zip
      shell: pwsh

    - name: Compress Executable (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        zip -r RFD_release.zip dist/RFD

    - name: Upload Artifact (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v3
      with:
        name: RFD-Release-windows
        path: RFD_release.zip

    - name: Upload Artifact (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v3
      with:
        name: RFD-Release-ubuntu
        path: RFD_release.zip
