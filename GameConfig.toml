# EXAMPLE GAME CONFIGURATION FILE.
# PLEASE REVIEW AND MODIFY IF YOU WISH TO RUN YOUR OWN SERVERS!
# Some arguments are provided as absolute paths and only work on my machine.

metadata.config_version_wildcard = "*"

[game_setup]
# Aliases for "v348" is "2018M", "v463" is "2021E".
roblox_version = '2021'

title = 'òó'
description = ''
creator_name = 'ÒÓ'

# Stretches to 16:9.
icon_path = 'c:\Users\USERNAME\Pictures\Byfron Icon.png'

# Runs at the CoreScript security level whenever a new *server* is started.
startup_script = 'game.workspace.FilteringEnabled = false'

[game_setup.place_file]
rbxl_uri = 'c:\Users\USERNAME\Documents\Roblox Files\VideoTest.rbxl'

enable_saveplace = false

[game_setup.persistence]
sqlite_path = '_.sqlite'
clear_on_start = false

[game_setup.asset_cache]
dir_path = './AssetCache'
clear_on_start = false

[server_core]
check_user_has_admin = '''
function(user_id_num, user_code) -- string -> bool
    return true
end
'''

retrieve_avatar_type = '''
function(user_id_num, user_code) -- str -> str
    return 'R15'
end
'''

retrieve_avatar_items = '''
function(user_id_num, user_code) -- str -> [str]
    return {
        10726856854,
        9482991343,
        9481782649,
        9120251003,
        4381817635,
        6969309778,
        5731052645,
        2846257298,
        121390054,
        261826995,
        154386348,
        201733574,
        48474294,
        6340101,
        192483960,
        190245296,
        183808364,
        34247191,
    }
end
'''

retrieve_avatar_colors = '''
function(user_id_num, user_code) -- str -> {[str]: number}
    return {
        head = 315,
        left_arm = 315,
        left_leg = 315,
        right_arm = 315,
        right_leg = 315,
        torso = 315,
    }
end
'''

retrieve_avatar_scales = '''
function(user_id_num, user_code) -- str -> {[str]: number}
    return {
        height = 1.25,
        width = 1,
        head = 1,
        depth = 1,
        proportion = 0,
        body_type = 0,
    }
end
'''

retrieve_username = '''
function(user_code) -- str -> str
    return user_code
end
'''

retrieve_user_id = '''
function(user_code) -- str -> int
    return math.random(1, 16777216)
end
'''

retrieve_account_age = '''
function(user_id_num, user_code) -- str -> int
    return 6969
end
'''

filter_text = '''
def f(text, user_id_num, user_code):
    return (
        text
        .replace('oo','òó')
        .replace('OO','ÒÓ')
        .replace('ee','èé')
        .replace('EE','ÈÉ')
        .replace('Roblox','Rōblox')
        .replace('ROBLOX','RŌBLOX')
    )
return f
'''

retrieve_groups = '''
function(user_id_num, user_code) -- str -> str
    return {
        ['1200769'] = 255;
        ['2868472'] = 255;
        ['4199740'] = 255;
        ['4265462'] = 255;
        ['4265456'] = 255;
        ['4265443'] = 255;
        ['4265449'] = 255;
    }
end
'''

retrieve_default_funds = '''
function(user_id_num, user_code) -- str -> int
    return 6969
end
'''

chat_style = 'ClassicAndBubble'

[remote_data]
asset_redirects_call_mode = 'python'
asset_redirects = '''
import requests
redirs = requests.get('https://ia800509.us.archive.org/5/items/roblox-asset-hash-archive/asset_dump_merged.json').json()
def f(asset_iden):
    asset_iden = str(asset_iden)
    if asset_iden in redirs:
        return {
            'raw_data': requests.get(redirs[asset_iden]).content,
        }
'''

[server_assignment]
players.maximum = 4096
players.preferred = 666
instances.count = 1
